@startuml

'!theme lsd-light from https://cdn.jsdelivr.net/gh/lsd-consulting/lsd-core@3/src/main/resources/static/
!pragma layout smetana

skinparam backgroundColor transparent

hide unlinked

title End-to-end testing

node "End-to-end tests" as e2e {
  [Tests] -> [Lsd Interceptors e2e]
  [Tests] --> [lsd-cucumber]
  [Tests] --> [lsd-junit]
  [lsd-cucumber] --> [lsd-generator]
  [lsd-junit] --> [lsd-generator]
  [lsd-cucumber] --> [Lsd Reports]
  [lsd-junit] --> [Lsd Reports]
}
note top of [Lsd Interceptors e2e]
 1. Tests trigger
 initial interaction
 that is intercepted
end note

note as pluginsNote
 4. The LSD plugins
 use the generator
 to render the diagrams
end note
[lsd-cucumber].up.pluginsNote
[lsd-junit].up.pluginsNote

note bottom of [lsd-generator]
 3. Lsd Generator
 retrieves captured interactions
 and render
end note

node "First Service" {
  [Input\nInterceptors] as AInputInterceptors
  [Service A]
  [Output\nInterceptors] as AOutputInterceptors
}


node "Second Service" {
  [B Input\nInterceptors] -down-> [Service B]
}

database "Lsd Storage" {
'  [MongoDB or Postgres] as lsdstorage
}

note bottom of "Lsd Storage"
 2. Interceptors persist
 captured interactions
end note


[Lsd Interceptors e2e] -right-> AInputInterceptors: Request
AInputInterceptors -right-> [Service A]
[Service A] -right-> AOutputInterceptors
AOutputInterceptors -right-> [B Input\nInterceptors]: Request

[Lsd Interceptors e2e] -[dotted]-> "Lsd Storage"
AInputInterceptors -[dotted]-> "Lsd Storage"
AOutputInterceptors -[dotted]right-> "Lsd Storage"
[B Input\nInterceptors] -[dotted]left-> "Lsd Storage"
"Lsd Storage" -[dotted]-> [lsd-generator]

'[service A] -->
@enduml